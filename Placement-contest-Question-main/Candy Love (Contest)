Problem Statement
A shop sells candies of sweetness ranging from 1 to 1000000000. Price of a candy with sweetness X is A*X + B*f(X) units, where f(X) returns number of digits in the decimal notation of X. Given A, B, and T, find the candy with maximum sweetness that Andy can buy if he has T units of money. If he cannot buy any candy, print 0.
Input
The first and the only line of input contains three integers A, B and T.

-------------------------------------------------------------------------------------------------------------------------------------------------------

import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args) {
        // Your code here
        Scanner sc=new Scanner(System.in);
        long a=sc.nextLong();
        long b=sc.nextLong();
        long t=sc.nextLong();
        long start=1;
        long end=(long)1e9;
        while(start<=end)
        {
            long mid=start+(end-start)/2;
            long ans=equaion(a,b,mid);
            if(ans<=t)
            {
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
            if(equaion(a,b,end)<=t)
            {
                System.out.println(end);
                return;
            }
            System.out.println(start);
        }
        public static long equaion(long a,long b,long mid)
        {
            long temp=mid;
            long count=0;
            while(temp>0)
            {
                count++;
                temp=temp/10;
            }
            return a*mid+b*count;
        }

    }
