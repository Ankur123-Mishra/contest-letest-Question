Problem Statement
You are given an array of N integers A1, A2,... , AN (1 <= A[i]. length <= 105). You have to find the lone sum of each of these integers.
To find the lone sum of any integer a, following steps are a must:

Take an integer b = Sum of digits of x.

If b < 10, lone sum = b and break

If b is at least 10, replace a with b, repeat from step 1.


For example:
Lone Sum of 799:
7 + 9 + 9 = 25
2 + 5 = 7.
Therefore, the lone Sum of 799 is 7.

For each integer j from 1 to 9, print the number of integers Ai (1 <= i <= N) having their lone sum as j.



Input
First line of the input contains N, the size of array.
Second line of the input contains N space- separated integers.

---------------------------------------------------------------------------------------------------------------------------------------------------------
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    static long digitSum(String num) {
        long sum = 0;
        for (int i = 0; i < num.length(); i++) {
            int curr = num.charAt(i) - '0'; // '1' -> 1
            sum += curr;
        }
        return sum;
    }
    //""+10 -> "10"


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int arr[] = new int[10];
        int n = sc.nextInt();
        for (int i = 0; i < n; i++) {
            String num = sc.next();
            long sum = digitSum(num); //123456
            while (sum > 9) {
                num = String.valueOf(sum);
                sum = digitSum(num);
            }
            arr[(int) sum]++;
        }

        for (int i = 1; i < 10; i++)
            System.out.print(arr[i] + " ");
    }
}
