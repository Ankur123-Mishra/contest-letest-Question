Problem Statement
You are given a chessboard of size N x N, where the top left square is black.
Each square contains a value. Find the sum of the values of all black squares and all white squares.

Remember that in a chessboard black and white squares are alternate.


Input
The first line of input will be the N size of the matrix. Then next N lines will consist of elements of the matrix. Each row will contain N elements since
it is a square matrix.


---------------------------------------------------------------------------------------------------------------------------------------
import java.io.*; // for handling input/output
import java.util.*; // contains Collections framework

// don't change the name of this class
// you can add inner classes if needed
class Main {
    public static void main (String[] args)throws IOException {
        // Your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int arr[][] = new int[n][n];
        for(int i=0;i<n;i++){
            String []input = br.readLine().split(" ");
            for(int j=0;j<n;j++){
                arr[i][j] = Integer.parseInt(input[j]);
            }
        }
        matSum(arr,n);

    }
    static void matSum(int arr[][], int n){
        long sum = 0,sum1 = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if((i+j)%2==0){
                    sum += arr[i][j];
                    
                }else{
                    sum1 += arr[i][j];
                }
            }
        }
        System.out.println(sum);
        System.out.println(sum1);
    }
}
